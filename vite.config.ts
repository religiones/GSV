import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'
import path from "path";
import {
  themePreprocessorPlugin,
  themePreprocessorHmrPlugin,
} from "@zougt/vite-plugin-theme-preprocessor";

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [
    react(),
    themePreprocessorPlugin({
      less:{
        // Enable Dynamic theme mode.
        arbitraryMode: true,
        // Default theme colorï¼ŒIt is usually the same as a theme color (@primary-color) in src/theme/theme-vars.less .
        defaultPrimaryColor: "#dedede",
        // Only one item of multipleScopeVars
        multipleScopeVars: [
          {
            // Any string, required
            scopeName: "theme-default",
            // path or varscontent must be selected
            path: path.resolve("src/theme/theme-default.less"),
            // varsContent same as content in path
            // varsContent:`@primary-color:${defaultPrimaryColor};`
          },
          {
            scopeName: "theme-dark",
            path: path.resolve("src/theme/theme-dark.less"),
          },
          {
            scopeName: "theme-light",
            path: path.resolve("src/theme/theme-light.less"),
          }
        ],
        // The color in CSS is not generated by the theme color variable, and it can also be extracted into the theme CSS to improve the weight
        includeStyleWithColors: [
          {
            // color can be string or string[], example: ["#ffffff","#000"] or ["transparent","none"].
            color: "#ffffff",
            // Exclude css props, example: not be #ffffff in background.
            // excludeCssProps:["background","background-color"]
            // Exclude css selectors
            // excludeSelectors: [
            //   ".ant-btn-link:hover, .ant-btn-link:focus, .ant-btn-link:active",
            // ],
          },
        ],
      }
    }),
    // development need theme HMR
    themePreprocessorHmrPlugin(),
  ]
})
